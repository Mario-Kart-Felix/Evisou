@using Evious.Web
@using Evious.Framework.Contract
@using Evious.Framework.Web.Controls
@using Evious.Cms.Contract
@model Channel
<style>
    .hottag {
        margin: 2px;
        padding: 5px;
        cursor: pointer;
    }
</style>
<div class="modal-header">
    
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    @{
        if(Model.ID == 0)
        {
        <h4 class="modal-title" id="ModalLabel">添加新频道</h4>
        }
        else
        {
        <h4 class="modal-title" id="ModalLabel">编辑频道内容</h4>
        }
    }    
</div>




@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainForm" }))
{
    @Html.ValidationSummary(true)
    
    <div class="modal-body">
        <div class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-md-2"><span class="required">*</span>图片：</label>
                <div class="col-md-9">
                    <div class="fileinput fileinput-new" data-provides="fileinput">
                        <div class="fileinput-new thumbnail" style="width: 200px; height: 170px;" id="thumbnail">
                            @if (Model.ID == 0)
                            {
                                <img src="http://www.placehold.it/200x150/EFEFEF/AAAAAA&amp;text=no+image" alt="" />
                            }
                            else
                            {
                                <img src="@Url.StaticFile()@Model.CoverPicture" alt="" />
                            }


                        </div>
                        <div id="progress" class="progress">
                            <div class="progress-bar progress-bar-success"></div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2"><span class="required">*</span>名称：</label>
                <div class="col-md-4">                    
                           <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-bars"></i>
                            </span>
                            <div class="input-icon right">
                                <i class="fa"></i>
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control text-box single-line input-medium" })
                            </div>
                          </div>
                        <span class="help-inline">@Html.ValidationMessageFor(m => m.Name)</span>
                    
                    
                </div>
            </div>          
                <div class="form-group">
                    <label class="control-label col-md-2"><span class="required">*</span>描述：</label>
                    <div class="col-md-4">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa  fa-pencil"></i>
                            </span>
                            <div class="input-icon right">
                                <i class="fa"></i>
                                @Html.TextAreaFor(m => m.Desc, new { @class = "form-control text-box single-line input-medium",@row=3})
                            </div>
                          </div>
                        <span class="help-inline">@Html.ValidationMessageFor(m => m.Desc)</span>
                    </div>
                </div>            
            <div class="form-group">
                <label class="control-label col-md-2"><span class="required">*</span>封面：</label>
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="fa fa-picture-o"></i>
                        </span>
                        <div class="input-icon right ">
                            <i class="fa"></i>
                            @Html.TextBoxFor(m => m.CoverPicture, new { @class = "form-control text-box single-line input-medium", @id = "coverimage" })
                        </div>
                    </div>
                    <span class="help-inline">@Html.ValidationMessageFor(m => m.CoverPicture)</span>
                </div>
                <div class="col-md-4">
                    <a class="btn btn-success fileinput-button btn-small" title="上传">
                        <i class="glyphicon glyphicon-plus"></i>
                        <input id="fileupload" type="file" name="files[]">
                    </a>
                    <a id="deleteuploaded" class="btn btn-danger delete btn-small" title="删除">
                        <i class="glyphicon glyphicon-trash"></i>
                    </a>
                    <span id="uploadmsg"></span>
                </div>                
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">激活：</label>
                <div class="col-md-4">
                    @Html.CheckBoxFor(m => m.IsActive, new { @id = "active", @class = "switch-chekcbox", @data_on_text = "是", @data_off_text = "否" })
                </div>
            </div>            
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" id="submitbutton" class="btn blue btn-sm default"><i class="fa fa-check"></i> 提交</button>
        <button type="button" class="btn btn-sm default" id="cancel" data-dismiss="modal">撤销</button>
    </div>

}


<script>
    var FormComponents = function () {

        var handleFancyBox = function () {
            $(".fancybox-button").fancybox({
                'titleShow': true,   //是否显示标题
                'showCloseButton': true,
            });
        };
        var handleCheckBox = function () {
            $('.switch-chekcbox').bootstrapSwitch();
        };

        var handleCheckForm = function () {
            var form = $("#mainForm");          
            var error = $('.alert-danger', form);
            var success = $('.alert-success', form);

            form.validate({
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",  // validate all fields including form hidden input
                rules: {
                    Name: {
                        minlength: 2,
                        required: true,
                    },
                    Desc: {
                        minlength: 2,
                        required: true,
                    }
                    
                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    success.hide();
                    error.show();
                    Metronic.scrollTo(error, -200);

                },

                errorPlacement: function (error, element) { // render error placement for each input type
                    var icon = $(element).parent('.input-icon').children('i');
                    icon.removeClass('fa-check').addClass("fa-warning");
                    icon.attr("data-original-title", error.text()).tooltip({ 'container': 'body' });
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').removeClass("has-success").addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight

                },

                success: function (label, element) {
                    var icon = $(element).parent('.input-icon').children('i');
                    $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                    icon.removeClass("fa-warning").addClass("fa-check");
                },

                submitHandler: function (form) {
                    success.show();
                    error.hide();
                    //form[0].submit(alert('dasdas')); // submit the form
                }
            });


            $("#submitbutton").click(function (e) {
                if (!form.valid()) {
                    e.preventDefault();
                }

            });
        };


        

        var handleUploadInput = function () {
            var url = "@Url.StaticFile()/UploadHandler.ashx";

            var coverimge = $('#coverimage');

            var filename;

           uploadButton = $('<button/>')
               .addClass('btn btn-primary')
               .prop('disabled', true)
               .prop('type', 'button')
               .text('处理中...')
               .on('click', function () {
                   var $this = $(this),
                       data = $this.data();
                   $this
                       .off('click')
                       .text('终止')
                       .on('click', function () {
                           $this.remove();
                           data.abort();
                       });
                   data.submit().always(function (data) {
                       $this.remove();
                   });
               });

           

            $('#deleteuploaded').hide();
            $('#progress').hide();



            $('#fileupload').fileupload({
                url: url,//"@Url.StaticFile()/UploadHandler.ashx",
                dataType: 'json',
                autoUpload: false,
                maxNumberOfFiles: 1,
                limitConcurrentUploads: 1,
                acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                maxFileSize: 5000000, // 5 MB           
                disableImageResize: /Android(?!.*Chrome)|Opera/
                    .test(window.navigator.userAgent),
                previewMaxWidth: 180,
                previewMaxHeight: 140,
                previewCrop: true
            }).on('fileuploadadd', function (e, data) {
                if ($("#thumbnail:has(div)").length == 0) {
                    $('#uploadmsg').empty();
                    $('#progress').hide(function () {
                        $('#progress .progress-bar').css('width', '0%');
                    });

                    $('#thumbnail').empty();
                    data.context = $('<div/>').appendTo('#thumbnail');
                    //$('#uploadtext').text('更改');
                    $.each(data.files, function (index, file) {
                        var node = $('<p/>').append($('<span/>').text(file.name));
                        if (!index) {
                            $('#uploadmsg').append(uploadButton.clone(true).data(data));
                            filename = file.name;
                        }
                        node.appendTo(data.context);
                    });
                } else {
                    $('#uploadmsg').empty();
                    $('#progress').hide(function () {
                        $('#progress .progress-bar').css('width', '0%');
                    });

                    $('#thumbnail').empty();
                    data.context = $('<div/>').appendTo('#thumbnail');
                    $.each(data.files, function (index, file) {
                        var node = $('<p/>').append($('<span id="filename"/>').text(file.name));
                        if (!index) {
                            $('#uploadmsg').append(uploadButton.clone(true).data(data));
                            filename = file.name;
                        }
                        node.appendTo(data.context);
                    });
                }

            }).on('fileuploadprocessalways', function (e, data) {
                var index = data.index,
                    file = data.files[index],
                    node = $(data.context.children()[index]);
                if (file.preview) {
                    node
                        .prepend('<br>')
                        .prepend(file.preview);
                }
                if (file.error) {
                    $('#uploadmsg')
                        .append('<br>')
                        .append($('<span class="text-danger"/>').text(file.error));
                }
                if (index + 1 === data.files.length) {
                    $('#uploadmsg').find('button')
                       // .text('上传')
                        .html('<i class="fa fa-upload"></i>')
                        .prop('disabled', !!data.files.error);
                }
                $('#progress').show();
            }).on('fileuploadprogressall', function (e, data) {
                $('#progress').show();
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#progress .progress-bar').css(
                    'width',
                    progress + '%'
                );
            }).on('fileuploaddone', function (e, data) {
                $('#fileupload').prop('disabled', true);
                $.each(data.result.files, function (index, file) {

                    if (file.url) {
                        var link = $('<a>')
                            .addClass('fancybox-button')
                            .prop('title', file.name)
                            //.attr('target', '_blank')
                            .prop('href', file.url)
                            .attr('data-ref', 'fancybox-button')
                            .text(file.name);
                        var deletebutton = $('#deleteuploaded');
                        $(data.context.children()[index])
                            .wrap(link);

                        deletebutton.show(function () {
                            deletebutton.attr("data-type", file.deleteType).attr("data-url", file.deleteUrl)
                        });

                        deletebutton.click(function () {

                            $.ajax({
                                xhrFields: { withCredentials: true },
                                url: file.deleteUrl,
                                type: 'DELETE',
                                success: function (response) {
                                    $('#fileupload').prop('disabled', false);
                                    $('#thumbnail').html('<img src="http://www.placehold.it/200x150/EFEFEF/AAAAAA&amp;text=no+image" alt="" />');
                                    $('#progress').hide(function () {
                                        $('#progress .progress-bar').css('width', '0%');
                                    });
                                    deletebutton.hide();
                                    coverimge.val('');
                                }
                            })
                        });
                        coverimge.val(file.url);
                        //.append(deleteButton.clone(true));

                    } else if (file.error) {
                        var error = $('<span class="text-danger"/>').text(file.error);
                        //$(data.context.children()[index])
                        $('#uploadmsg')
                            .append('<br>')
                            .append(error);
                    }
                });
            }).on('fileuploadfail', function (e, data) {
                $.each(data.files, function (index) {
                    var error = $('<span class="text-danger"/>').text('文件上传失败.');
                    //$(data.context.children()[index])
                    $('#uploadmsg')
                        .append('<br>')
                        .append(error);
                });
            }).prop('disabled', !$.support.fileInput)
            .parent().addClass($.support.fileInput ? undefined : 'disabled')//;
        .bind('fileuploadsubmit', function (e, data) {
            data.formData =
                [{
                    name: "subfolder",
                    value: "cms"
                }, {
                    name: 'Filename',
                    value: filename
                }];
            });
            
        }

        return {
            init: function () {
                handleFancyBox();
                handleCheckBox();
                handleUploadInput();
                handleCheckForm();
            }
        }
    }();

    $(function () {        
        FormComponents.init();
    });

</script>




