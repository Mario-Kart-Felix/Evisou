@using Evisou.Framework.Contract
@using Evisou.Framework.Web.Controls
@using Evisou.Account.Contract
@model User
<script src="/assets/global/plugins/jquery-validation/js/jquery.validate.min.js" type="text/javascript"></script>
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>    
    <h4 class="modal-title" id="ModalLabel">修改密码</h4>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainForm" }))
{
    @Html.ValidationSummary(true)
    <div class="modal-body">
        <div class="form-horizontal">
            @*<div class="alert alert-danger display-hide">
                    <button class="close" data-close="alert"></button>
                    You have some form errors. Please check below.
                </div>
                <div class="alert alert-success display-hide">
                    <button class="close" data-close="alert"></button>
                    Your form validation is successful!
                </div>*@
            <div class="form-group">
                <label class="control-label col-md-2"><span class="required">*</span>登录名：</label>
                <div class="col-md-4">
                     @Model.LoginName
                </div>
            </div>
           
                <div class="form-group">
                    <label class="control-label col-md-2"><span class="required">*</span>原密码：</label>
                    <div class="col-md-4">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-dot-circle-o"></i>
                            </span>
                            <div class="input-icon right">
                                <i class="fa"></i>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control text-box single-line input-medium" })
                            </div>
                        </div>
                        <span class="help-inline">@Html.ValidationMessageFor(m => m.Password)</span>
                    </div>
                </div>   
            <div class="form-group">
                <label class="control-label col-md-2"><span class="required">*</span>新密码：</label>
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="fa fa-dot-circle-o"></i>
                        </span>
                        <div class="input-icon right">
                            <i class="fa"></i>
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control text-box single-line input-medium" })
                        </div>
                    </div>
                    <span class="help-inline">@Html.ValidationMessageFor(m => m.NewPassword)</span>
                </div>
            </div>        
            <div class="form-group">
                <label class="control-label col-md-2">邮箱：</label>
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="fa fa-envelope"></i>
                        </span>
                        <div class="input-icon right">
                            <i class="fa"></i>
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control text-box single-line input-medium" })
                        </div>
                    </div>
                    <span class="help-inline">@Html.ValidationMessageFor(m => m.Email)</span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">手机：</label>
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="fa fa-phone"></i>
                        </span>
                        <div class="input-icon right">
                            <i class="fa"></i>
                            @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control text-box single-line input-medium" })
                        </div>
                    </div>
                    <span class="help-inline">@Html.ValidationMessageFor(m => m.Mobile)</span>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" id="submitbutton" class="btn blue btn-sm default"><i class="fa fa-check"></i> 提交</button>
        <button type="button" class="btn btn-sm default" id="cancel" data-dismiss="modal">撤销</button>
    </div>

}

<script>
    $(function () {
        $('.switch-chekcbox').bootstrapSwitch();
        var form2 = $("#mainForm");
        //alert(form2.attr("action"));
        var error2 = $('.alert-danger', form2);
        var success2 = $('.alert-success', form2);


        form2.validate({
            errorElement: 'span', //default input error message container
            errorClass: 'help-block help-block-error', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: "",  // validate all fields including form hidden input
            rules: {
                LoginName: {
                    minlength: 2,
                    required: true,
                },
                Password: {
                    minlength: 2,
                    required: true
                },
                NewPassword: {
                    minlength: 2,
                    required: true
                },
                Email: {
                    required: true,
                    email: true
                },
                Mobile: {
                    required: true,
                    number: true,
                    minlength: 11,
                    maxlength: 11
                }
            },

            invalidHandler: function (event, validator) { //display error alert on form submit
                success2.hide();
                error2.show();
                Metronic.scrollTo(error2, -200);

            },

            errorPlacement: function (error, element) { // render error placement for each input type
                var icon = $(element).parent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass("fa-warning");
                icon.attr("data-original-title", error.text()).tooltip({ 'container': 'body' });
            },

            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').removeClass("has-success").addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass("fa-warning").addClass("fa-check");
            },

            submitHandler: function (form) {
                success2.show();
                error2.hide();
                //form[0].submit(alert('dasdas')); // submit the form
            }
        });


        $("#submitbutton").click(function (e) {
            if (!form2.valid()) {
                e.preventDefault();
            }

        });

    });
</script>




